parameters:
  - name: staging_publisher_id
    displayName: VisualStudio Marketplace Publisher ID for Stating
  - name: staging_extension_id
    displayName: VisualStudio Marketplace Extension ID for Stating
  - name: production_publisher_id
    displayName: VisualStudio Marketplace Publisher ID for Production
  - name: production_extension_id
    displayName: VisualStudio Marketplace Extension ID for Production

jobs:
  - job: build
    
    displayName: 'Build Extension for Visual Studio Marketplace'
    
    pool:
      name: Azure Pipelines
      vmImage: 'ubuntu-latest'

    container: mcr.microsoft.com/vscode/devcontainers/typescript-node:20
  
    steps:

    # Install dependencies  
    - script: npm install --legacy-peer-deps
      displayName: Install Dependencies

    # Linting TS(X) 
    - script: npm run lint
      displayName: Linting

    # Test and Code Coverage
    - script: npm run test
      displayName: Testing

    # Publish Test Result
    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testRunner: JUnit
        testResultsFiles: '**/test-results.xml'

    # Publish Code Coverage
    - task: PublishCodeCoverageResults@1
      inputs: 
        codeCoverageTool: Cobertura
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'
        reportDirectory: '$(System.DefaultWorkingDirectory)/**/coverage'

    # Build extension  
    - script: npm run build
      displayName: Build

    # Package for Staging
    - script: |
        echo "npx tfx extension create --manifest-globs azure-devops-extension.json src/**/*.json --publisher ${{ parameters.staging_publisher_id }} --extension-id ${{ parameters.staging_extension_id }} --output-path $(System.DefaultWorkingDirectory)/output/staging.vsix"
        npx tfx extension create --manifest-globs azure-devops-extension.json src/**/*.json --publisher ${{ parameters.staging_publisher_id }} --extension-id ${{ parameters.staging_extension_id }} --output-path $(System.DefaultWorkingDirectory)/output/staging.vsix
      displayName: Package for Staging

    # Package for Production
    - script: |
        echo "npx tfx extension create --manifest-globs azure-devops-extension.json src/**/*.json --publisher ${{ parameters.production_publisher_id }} --extension-id ${{ parameters.production_extension_id }} --output-path $(System.DefaultWorkingDirectory)/output/production.vsix"
        npx tfx extension create --manifest-globs azure-devops-extension.json src/**/*.json --publisher ${{ parameters.production_publisher_id }} --extension-id ${{ parameters.production_extension_id }} --output-path $(System.DefaultWorkingDirectory)/output/production.vsix
      displayName: Package for Production

    # Publish VSIX Artifact
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(System.DefaultWorkingDirectory)/output'
        artifactName: VSIX